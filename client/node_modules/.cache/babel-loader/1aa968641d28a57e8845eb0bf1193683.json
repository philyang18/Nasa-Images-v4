{"ast":null,"code":"var _jsxFileName = \"/Users/phillipyang/Desktop/Nasa-Images-v4/client/src/CommentBox.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nconst ENTER_KEY = 13;\nconst ESCAPE_KEY = 27;\nexport default class CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.props.value === \"\" || !this.props.value || this.props.value === \"\\n\") {\n        this.setState({\n          default: true\n        });\n      }\n    };\n\n    this.enableEditMode = () => {\n      this.setState({\n        editMode: true\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        currentValue: event.target.value\n      });\n\n      if (event.target.value.length <= 150) {\n        this.setState({\n          showSaveError: false\n        });\n      }\n    };\n\n    this.handleKeyUp = event => {\n      console.log(event);\n      const {\n        keyCode\n      } = event;\n      const {\n        currentValue\n      } = this.state;\n\n      if (keyCode === ENTER_KEY && !event.shiftKey || keyCode === ESCAPE_KEY) {\n        this.setState({\n          editMode: false\n        });\n      }\n\n      if (keyCode === ENTER_KEY && !event.shiftKey) {\n        if (!currentValue.trim()) {\n          this.setState({\n            default: true,\n            currentValue: \"\"\n          });\n        } else {\n          this.setState({\n            default: false\n          });\n        }\n\n        this.props.onEnter(currentValue);\n      } else if (keyCode === ESCAPE_KEY) {\n        this.setState({\n          currentValue: this.props.value\n        });\n      }\n    };\n\n    this.handleInvalidKeyUp = event => {\n      const {\n        keyCode\n      } = event;\n\n      if (keyCode === ESCAPE_KEY) {\n        this.setState({\n          editMode: false,\n          currentValue: this.props.value\n        });\n      }\n\n      if (keyCode === ENTER_KEY) {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: 'smooth'\n        });\n        this.setState({\n          showSaveError: true\n        });\n      }\n    };\n\n    this.handleKeyDown = event => {\n      const {\n        keyCode\n      } = event;\n\n      if (keyCode === ENTER_KEY && !event.shiftKey) {\n        event.preventDefault();\n      }\n    };\n\n    this.state = {\n      currentValue: props.value,\n      editMode: false,\n      defaultText: \"Click to add a comment\",\n      default: false,\n      showSaveError: false\n    };\n  }\n\n  render() {\n    if (this.state.editMode) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        \"data-testid\": \"comment-input\",\n        id: \"comment-box-input\",\n        value: this.state.currentValue,\n        onKeyUp: this.state.currentValue.length <= 150 ? this.handleKeyUp : this.handleInvalidKeyUp,\n        onKeyDown: this.handleKeyDown,\n        onChange: this.handleChange,\n        rows: \"5\",\n        autofocus: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(RemainingCharacters, {\n        max: 150,\n        text: this.state.currentValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, remainingCharacters => {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: remainingCharacters < 0 ? \"text-danger\" : undefined,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }\n        }, remainingCharacters, \" characters left\");\n      }), this.state.showSaveError ? /*#__PURE__*/React.createElement(\"div\", {\n        \"data-testid\": \"form-validation\",\n        className: \"text-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 39\n        }\n      }, \"Cannot save!\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 119\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        \"data-testid\": \"comment-text\",\n        id: \"comment-box\",\n        className: \"col-lg-6 col-md-6 col-sm-12\",\n        onClick: this.enableEditMode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, this.state.default ? this.state.defaultText : this.props.value);\n    }\n  }\n\n}\nCommentBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onEnter: PropTypes.func.isRequired\n};\n\nfunction RemainingCharacters(props) {\n  const {\n    max,\n    text,\n    children\n  } = props;\n  const remaining = max - text.length;\n\n  if (typeof children === \"function\") {\n    return children(remaining);\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, remaining, \" characters left\");\n  }\n}\n\nRemainingCharacters.propTypes = {\n  text: PropTypes.string.isRequired,\n  max: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/Users/phillipyang/Desktop/Nasa-Images-v4/client/src/CommentBox.js"],"names":["React","PropTypes","ENTER_KEY","ESCAPE_KEY","CommentBox","Component","constructor","props","componentDidMount","value","setState","default","enableEditMode","editMode","handleChange","event","currentValue","target","length","showSaveError","handleKeyUp","console","log","keyCode","state","shiftKey","trim","onEnter","handleInvalidKeyUp","window","scrollTo","top","document","body","scrollHeight","behavior","handleKeyDown","preventDefault","defaultText","render","remainingCharacters","undefined","propTypes","string","isRequired","func","RemainingCharacters","max","text","children","remaining","number"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ENTER_KEY = 13;\nconst ESCAPE_KEY = 27;\n\nexport default class CommentBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentValue: props.value,\n      editMode: false,\n      defaultText: \"Click to add a comment\",\n      default: false,\n      showSaveError: false\n    };\n  }\n  componentDidMount = () => {\n    if (\n      this.props.value === \"\" ||\n      !this.props.value ||\n      this.props.value === \"\\n\"\n    ) {\n      this.setState({ default: true });\n    }\n  };\n  enableEditMode = () => {\n    this.setState({\n      editMode: true\n    });\n  };\n  handleChange = event => {\n    this.setState({\n      currentValue: event.target.value\n    });\n    if (event.target.value.length <= 150) {\n      this.setState({\n        showSaveError: false\n      });\n    }\n  };\n  handleKeyUp = event => {\n    console.log(event);\n    const { keyCode } = event;\n    const { currentValue } = this.state;\n    if ((keyCode === ENTER_KEY && !event.shiftKey)|| keyCode === ESCAPE_KEY) {\n      this.setState({ editMode: false });\n    }\n\n    if (keyCode === ENTER_KEY && !event.shiftKey) {\n      if (!currentValue.trim()) {\n        this.setState({ default: true, currentValue: \"\" });\n      } else {\n        this.setState({ default: false });\n      }\n      this.props.onEnter(currentValue);\n    } else if (keyCode === ESCAPE_KEY) {\n      this.setState({\n        currentValue: this.props.value\n      });\n    }\n  };\n  handleInvalidKeyUp = event => {\n    const { keyCode } = event;\n    if (keyCode === ESCAPE_KEY) {\n      this.setState({ editMode: false, currentValue: this.props.value });\n\n    }\n    if (keyCode === ENTER_KEY) {\n      window.scrollTo({top: document.body.scrollHeight, behavior: 'smooth' });\n      \n      this.setState({ showSaveError: true });\n    }\n  };\n  // removes a newline when hitting enter\n  handleKeyDown = event => {\n    const { keyCode } = event;\n    if (keyCode === ENTER_KEY && !event.shiftKey) {\n      event.preventDefault();\n    }\n  };\n\n  render() {\n    if (this.state.editMode) {\n      return (\n        <div>\n          <textarea\n            data-testid=\"comment-input\"\n            id=\"comment-box-input\"\n            value={this.state.currentValue}\n            onKeyUp={ this.state.currentValue.length <= 150 ? this.handleKeyUp : this.handleInvalidKeyUp }\n            onKeyDown={this.handleKeyDown}\n            onChange={this.handleChange}\n            rows=\"5\"\n            autofocus\n          />\n          <RemainingCharacters max={150} text={this.state.currentValue}>\n            {remainingCharacters => {\n              return (\n                <p className={remainingCharacters < 0 ? \"text-danger\" : undefined}>\n                  {remainingCharacters} characters left\n                </p>\n              );\n            }}\n          </RemainingCharacters>\n          {this.state.showSaveError ? <div data-testid=\"form-validation\" className=\"text-danger\">Cannot save!</div> : <div /> }\n        </div>\n      );\n    }\n    else {\n      return (\n        <p\n          data-testid=\"comment-text\"\n          id=\"comment-box\"\n          className=\"col-lg-6 col-md-6 col-sm-12\"\n          onClick={this.enableEditMode}\n        >\n          {this.state.default ? this.state.defaultText : this.props.value}\n        </p>\n      );\n    }\n  }\n}\n\nCommentBox.propTypes = {\n  value: PropTypes.string.isRequired,\n  onEnter: PropTypes.func.isRequired\n};\n\nfunction RemainingCharacters(props) {\n  const { max, text, children } = props;\n  const remaining = max - text.length;\n\n  if (typeof children === \"function\") {\n    return children(remaining);\n  } else {\n    return <>{remaining} characters left</>;\n  }\n}\n\nRemainingCharacters.propTypes = {\n  text: PropTypes.string.isRequired,\n  max: PropTypes.number.isRequired\n};\n"]},"metadata":{},"sourceType":"module"}