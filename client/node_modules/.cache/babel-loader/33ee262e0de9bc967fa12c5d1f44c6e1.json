{"ast":null,"code":"var _jsxFileName = \"/Users/phillipyang/Desktop/Nasa-Images-v3/client/src/EditPassword.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { updatePasswordNotification } from './Notifications';\nexport default class EditPassword extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.savePassword = event => {\n      this.setState({\n        password: event.target.value,\n        passwordErrorMessage: \"\"\n      });\n    };\n\n    this.saveNewPassword = event => {\n      this.setState({\n        newPassword: event.target.value,\n        passwordErrorMessage: \"\"\n      });\n    };\n\n    this.saveNewPasswordAgain = event => {\n      this.setState({\n        newPasswordAgain: event.target.value,\n        passwordErrorMessage: \"\"\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      var response = await axios.post('http://localhost:4000/account/login', {\n        _id: this.props.location.state.email,\n        password: this.state.password\n      });\n\n      if (response.status !== 200) {\n        this.setState({\n          passwordErrorMessage: \"Invalid password\"\n        });\n      } else if (this.state.newPassword !== this.state.newPasswordAgain) {\n        this.setState({\n          passwordErrorMessage: \"New passwords must match\"\n        });\n      } else if (this.state.newPassword.length < 8) {\n        this.setState({\n          passwordErrorMessage: \"New password must have at least 8 characters\"\n        });\n      } else if (!/^(?=.*[a-z])/.test(this.state.newPassword)) {\n        this.setState({\n          passwordErrorMessage: \"New password must contain 1 lowercase character\"\n        });\n      } else if (!/^(?=.*[A-Z])/.test(this.state.newPassword)) {\n        this.setState({\n          passwordErrorMessage: \"New password must contain 1 uppercase character\"\n        });\n      } else if (!/^(?=.*[0-9])/.test(this.state.newPassword)) {\n        this.setState({\n          passwordErrorMessage: \"New password must contain 1 numerical character\"\n        });\n      } else {\n        await axios.post('http://localhost:4000/account/password/edit', {\n          _id: this.props.location.state.email,\n          password: this.state.password,\n          new_password: this.state.newPassword\n        }).then(success => {\n          updatePasswordNotification(this.props.location.state.email);\n          setTimeout(() => {\n            this.props.history.push({\n              pathname: '/',\n              state: {\n                email: this.props.location.state.email\n              }\n            });\n          }, 750);\n        }).catch(error => {\n          this.setState({\n            passwordErrorMessage: \"Unable to update. Please try again\"\n          });\n        });\n      }\n    };\n\n    this.state = {\n      password: \"\",\n      newPassword: \"\",\n      newPasswordAgain: \"\",\n      passwordErrorMessage: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"edit-password-page\",\n      onClick: this.props.onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"password-form-holder\",\n      className: \"col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Change Password\"), /*#__PURE__*/React.createElement(\"form\", {\n      id: \"password-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, \"Current Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"********\",\n      value: this.state.password,\n      onChange: this.savePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 37\n      }\n    }, \"New Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"********\",\n      value: this.state.newPassword,\n      onChange: this.saveNewPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, \"Re-enter New Password:\"), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-control\",\n      type: \"password\",\n      placeholder: \"********\",\n      value: this.state.newPasswordAgain,\n      onChange: this.saveNewPasswordAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 37\n      }\n    }, this.state.passwordErrorMessage)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }, \"Update\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/phillipyang/Desktop/Nasa-Images-v3/client/src/EditPassword.js"],"names":["React","axios","updatePasswordNotification","EditPassword","Component","constructor","props","savePassword","event","setState","password","target","value","passwordErrorMessage","saveNewPassword","newPassword","saveNewPasswordAgain","newPasswordAgain","handleSubmit","preventDefault","response","post","_id","location","state","email","status","length","test","new_password","then","success","setTimeout","history","push","pathname","catch","error","render","onClick"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { updatePasswordNotification } from './Notifications';\n\nexport default class EditPassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            newPassword: \"\",\n            newPasswordAgain: \"\",\n            passwordErrorMessage: \"\"\n        };\n       \n    }\n    savePassword = event => {\n        this.setState({password: event.target.value, passwordErrorMessage: \"\"});\n    }\n    saveNewPassword = event => {\n        this.setState({newPassword: event.target.value, passwordErrorMessage: \"\"});\n    }\n    saveNewPasswordAgain = event => {\n        this.setState({newPasswordAgain: event.target.value, passwordErrorMessage: \"\"});\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        var response = await axios.post('http://localhost:4000/account/login', {\n            _id: this.props.location.state.email,\n            password: this.state.password\n        });\n        if(response.status !== 200){\n            this.setState({passwordErrorMessage: \"Invalid password\"});\n        }\n        else if(this.state.newPassword !== this.state.newPasswordAgain) {\n            this.setState({passwordErrorMessage: \"New passwords must match\"});\n        } \n        else if(this.state.newPassword.length < 8) {\n            this.setState({passwordErrorMessage: \"New password must have at least 8 characters\"});\n        }\n        else if(!/^(?=.*[a-z])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 lowercase character\"});\n        }\n        else if(!/^(?=.*[A-Z])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 uppercase character\"});\n        }\n        else if(!/^(?=.*[0-9])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 numerical character\"});\n        } else {\n            await axios.post('http://localhost:4000/account/password/edit', {\n                _id: this.props.location.state.email,\n                password: this.state.password,\n                new_password: this.state.newPassword\n            }).then(success => {\n                updatePasswordNotification(this.props.location.state.email); \n                setTimeout(() => {  this.props.history.push({\n                    pathname: '/',\n                    state: {\n                        email: this.props.location.state.email\n                    }\n                }); }, 750);\n                \n                \n            }).catch(error =>{\n                this.setState({passwordErrorMessage: \"Unable to update. Please try again\"});\n            });\n        }\n    }\n    render() {\n        return(\n            <div id=\"edit-password-page\" onClick={this.props.onClick}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div id=\"password-form-holder\" className=\"col-12\">\n                            <h1>Change Password</h1>\n                            <form id=\"password-form\" onSubmit={this.handleSubmit}>\n                                <div class=\"form-group\">\n                                    <label>Current Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.password} onChange={this.savePassword}/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>New Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.newPassword} onChange={this.saveNewPassword}/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>Re-enter New Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.newPasswordAgain} onChange={this.saveNewPasswordAgain}/>\n                                    <div className=\"text-danger\">{this.state.passwordErrorMessage}</div>\n                                </div>\n                                <button className=\"btn btn-primary\" type=\"submit\">Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}