{"ast":null,"code":"import _regeneratorRuntime from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/phillipyang/Desktop/Nasa-Images-v4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import{updatePasswordNotification}from'./Notifications';var EditPassword=/*#__PURE__*/function(_React$Component){_inherits(EditPassword,_React$Component);var _super=_createSuper(EditPassword);function EditPassword(props){var _this;_classCallCheck(this,EditPassword);_this=_super.call(this,props);_this.savePassword=function(event){_this.setState({password:event.target.value,passwordErrorMessage:\"\"});};_this.saveNewPassword=function(event){_this.setState({newPassword:event.target.value,passwordErrorMessage:\"\"});};_this.saveNewPasswordAgain=function(event){_this.setState({newPasswordAgain:event.target.value,passwordErrorMessage:\"\"});};_this.handleSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();_context.next=3;return axios.post('http://localhost:5000http://localhost:5000/account/login',{_id:_this.props.location.state.email,password:_this.state.password});case 3:response=_context.sent;if(!(response.status!==200)){_context.next=8;break;}_this.setState({passwordErrorMessage:\"Invalid password\"});_context.next=30;break;case 8:if(!(_this.state.newPassword!==_this.state.newPasswordAgain)){_context.next=12;break;}_this.setState({passwordErrorMessage:\"New passwords must match\"});_context.next=30;break;case 12:if(!(_this.state.newPassword.length<8)){_context.next=16;break;}_this.setState({passwordErrorMessage:\"New password must have at least 8 characters\"});_context.next=30;break;case 16:if(/^(?=.*[a-z])/.test(_this.state.newPassword)){_context.next=20;break;}_this.setState({passwordErrorMessage:\"New password must contain 1 lowercase character\"});_context.next=30;break;case 20:if(/^(?=.*[A-Z])/.test(_this.state.newPassword)){_context.next=24;break;}_this.setState({passwordErrorMessage:\"New password must contain 1 uppercase character\"});_context.next=30;break;case 24:if(/^(?=.*[0-9])/.test(_this.state.newPassword)){_context.next=28;break;}_this.setState({passwordErrorMessage:\"New password must contain 1 numerical character\"});_context.next=30;break;case 28:_context.next=30;return axios.post('http://localhost:5000/account/password/edit',{_id:_this.props.location.state.email,password:_this.state.password,new_password:_this.state.newPassword}).then(function(success){updatePasswordNotification(_this.props.location.state.email);setTimeout(function(){_this.props.history.push({pathname:'/',state:{email:_this.props.location.state.email}});},750);}).catch(function(error){_this.setState({passwordErrorMessage:\"Unable to update. Please try again\"});});case 30:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={password:\"\",newPassword:\"\",newPasswordAgain:\"\",passwordErrorMessage:\"\"};return _this;}_createClass(EditPassword,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{id:\"edit-password-page\",onClick:this.props.onClick},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{id:\"password-form-holder\",className:\"col-12\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Change Password\"),/*#__PURE__*/React.createElement(\"form\",{id:\"password-form\",onSubmit:this.handleSubmit},/*#__PURE__*/React.createElement(\"div\",{class:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Current Password:\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",placeholder:\"********\",value:this.state.password,onChange:this.savePassword})),/*#__PURE__*/React.createElement(\"div\",{class:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"New Password:\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",placeholder:\"********\",value:this.state.newPassword,onChange:this.saveNewPassword})),/*#__PURE__*/React.createElement(\"div\",{class:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",null,\"Re-enter New Password:\"),/*#__PURE__*/React.createElement(\"input\",{className:\"form-control\",type:\"password\",placeholder:\"********\",value:this.state.newPasswordAgain,onChange:this.saveNewPasswordAgain}),/*#__PURE__*/React.createElement(\"div\",{className:\"text-danger\"},this.state.passwordErrorMessage)),/*#__PURE__*/React.createElement(\"button\",{className:\"btn btn-primary\",type:\"submit\"},\"Update\"))))));}}]);return EditPassword;}(React.Component);export{EditPassword as default};","map":{"version":3,"sources":["/Users/phillipyang/Desktop/Nasa-Images-v4/client/src/EditPassword.js"],"names":["React","axios","updatePasswordNotification","EditPassword","props","savePassword","event","setState","password","target","value","passwordErrorMessage","saveNewPassword","newPassword","saveNewPasswordAgain","newPasswordAgain","handleSubmit","preventDefault","post","_id","location","state","email","response","status","length","test","new_password","then","success","setTimeout","history","push","pathname","catch","error","onClick","Component"],"mappings":"u9BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,0BAAT,KAA2C,iBAA3C,C,GAEqBC,CAAAA,Y,wHACjB,sBAAYC,KAAZ,CAAmB,8CACf,uBAAMA,KAAN,EADe,MAUnBC,YAVmB,CAUJ,SAAAC,KAAK,CAAI,CACpB,MAAKC,QAAL,CAAc,CAACC,QAAQ,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAAxB,CAA+BC,oBAAoB,CAAE,EAArD,CAAd,EACH,CAZkB,OAanBC,eAbmB,CAaD,SAAAN,KAAK,CAAI,CACvB,MAAKC,QAAL,CAAc,CAACM,WAAW,CAAEP,KAAK,CAACG,MAAN,CAAaC,KAA3B,CAAkCC,oBAAoB,CAAE,EAAxD,CAAd,EACH,CAfkB,OAgBnBG,oBAhBmB,CAgBI,SAAAR,KAAK,CAAI,CAC5B,MAAKC,QAAL,CAAc,CAACQ,gBAAgB,CAAET,KAAK,CAACG,MAAN,CAAaC,KAAhC,CAAuCC,oBAAoB,CAAE,EAA7D,CAAd,EACH,CAlBkB,OAoBnBK,YApBmB,0FAoBJ,iBAAMV,KAAN,+HACXA,KAAK,CAACW,cAAN,GADW,sBAEUhB,CAAAA,KAAK,CAACiB,IAAN,CAAW,0DAAX,CAAuE,CACxFC,GAAG,CAAE,MAAKf,KAAL,CAAWgB,QAAX,CAAoBC,KAApB,CAA0BC,KADyD,CAExFd,QAAQ,CAAE,MAAKa,KAAL,CAAWb,QAFmE,CAAvE,CAFV,QAEPe,QAFO,oBAMRA,QAAQ,CAACC,MAAT,GAAoB,GANZ,0BAOP,MAAKjB,QAAL,CAAc,CAACI,oBAAoB,CAAE,kBAAvB,CAAd,EAPO,mCASH,MAAKU,KAAL,CAAWR,WAAX,GAA2B,MAAKQ,KAAL,CAAWN,gBATnC,2BAUP,MAAKR,QAAL,CAAc,CAACI,oBAAoB,CAAE,0BAAvB,CAAd,EAVO,oCAYH,MAAKU,KAAL,CAAWR,WAAX,CAAuBY,MAAvB,CAAgC,CAZ7B,2BAaP,MAAKlB,QAAL,CAAc,CAACI,oBAAoB,CAAE,8CAAvB,CAAd,EAbO,kCAeF,eAAee,IAAf,CAAoB,MAAKL,KAAL,CAAWR,WAA/B,CAfE,0BAgBP,MAAKN,QAAL,CAAc,CAACI,oBAAoB,CAAE,iDAAvB,CAAd,EAhBO,kCAkBF,eAAee,IAAf,CAAoB,MAAKL,KAAL,CAAWR,WAA/B,CAlBE,0BAmBP,MAAKN,QAAL,CAAc,CAACI,oBAAoB,CAAE,iDAAvB,CAAd,EAnBO,kCAqBF,eAAee,IAAf,CAAoB,MAAKL,KAAL,CAAWR,WAA/B,CArBE,0BAsBP,MAAKN,QAAL,CAAc,CAACI,oBAAoB,CAAE,iDAAvB,CAAd,EAtBO,sDAwBDV,CAAAA,KAAK,CAACiB,IAAN,CAAW,6CAAX,CAA0D,CAC5DC,GAAG,CAAE,MAAKf,KAAL,CAAWgB,QAAX,CAAoBC,KAApB,CAA0BC,KAD6B,CAE5Dd,QAAQ,CAAE,MAAKa,KAAL,CAAWb,QAFuC,CAG5DmB,YAAY,CAAE,MAAKN,KAAL,CAAWR,WAHmC,CAA1D,EAIHe,IAJG,CAIE,SAAAC,OAAO,CAAI,CACf3B,0BAA0B,CAAC,MAAKE,KAAL,CAAWgB,QAAX,CAAoBC,KAApB,CAA0BC,KAA3B,CAA1B,CACAQ,UAAU,CAAC,UAAM,CAAG,MAAK1B,KAAL,CAAW2B,OAAX,CAAmBC,IAAnB,CAAwB,CACxCC,QAAQ,CAAE,GAD8B,CAExCZ,KAAK,CAAE,CACHC,KAAK,CAAE,MAAKlB,KAAL,CAAWgB,QAAX,CAAoBC,KAApB,CAA0BC,KAD9B,CAFiC,CAAxB,EAKf,CALK,CAKH,GALG,CAAV,CAQH,CAdK,EAcHY,KAdG,CAcG,SAAAC,KAAK,CAAG,CACb,MAAK5B,QAAL,CAAc,CAACI,oBAAoB,CAAE,oCAAvB,CAAd,EACH,CAhBK,CAxBC,wDApBI,+DAEf,MAAKU,KAAL,CAAa,CACTb,QAAQ,CAAE,EADD,CAETK,WAAW,CAAE,EAFJ,CAGTE,gBAAgB,CAAE,EAHT,CAITJ,oBAAoB,CAAE,EAJb,CAAb,CAFe,aASlB,C,gEAsDQ,CACL,mBACI,2BAAK,EAAE,CAAC,oBAAR,CAA6B,OAAO,CAAE,KAAKP,KAAL,CAAWgC,OAAjD,eACI,2BAAK,SAAS,CAAC,WAAf,eACI,2BAAK,SAAS,CAAC,KAAf,eACI,2BAAK,EAAE,CAAC,sBAAR,CAA+B,SAAS,CAAC,QAAzC,eACI,gDADJ,cAEI,4BAAM,EAAE,CAAC,eAAT,CAAyB,QAAQ,CAAE,KAAKpB,YAAxC,eACI,2BAAK,KAAK,CAAC,YAAX,eACI,qDADJ,cAEI,6BAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,UAArC,CAAgD,WAAW,CAAC,UAA5D,CAAuE,KAAK,CAAE,KAAKK,KAAL,CAAWb,QAAzF,CAAmG,QAAQ,CAAE,KAAKH,YAAlH,EAFJ,CADJ,cAKI,2BAAK,KAAK,CAAC,YAAX,eACI,iDADJ,cAEI,6BAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,UAArC,CAAgD,WAAW,CAAC,UAA5D,CAAuE,KAAK,CAAE,KAAKgB,KAAL,CAAWR,WAAzF,CAAsG,QAAQ,CAAE,KAAKD,eAArH,EAFJ,CALJ,cASI,2BAAK,KAAK,CAAC,YAAX,eACI,0DADJ,cAEI,6BAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,UAArC,CAAgD,WAAW,CAAC,UAA5D,CAAuE,KAAK,CAAE,KAAKS,KAAL,CAAWN,gBAAzF,CAA2G,QAAQ,CAAE,KAAKD,oBAA1H,EAFJ,cAGI,2BAAK,SAAS,CAAC,aAAf,EAA8B,KAAKO,KAAL,CAAWV,oBAAzC,CAHJ,CATJ,cAcI,8BAAQ,SAAS,CAAC,iBAAlB,CAAoC,IAAI,CAAC,QAAzC,WAdJ,CAFJ,CADJ,CADJ,CADJ,CADJ,CA2BH,C,0BA5FqCX,KAAK,CAACqC,S,SAA3BlC,Y","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { updatePasswordNotification } from './Notifications';\n\nexport default class EditPassword extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            newPassword: \"\",\n            newPasswordAgain: \"\",\n            passwordErrorMessage: \"\"\n        };\n       \n    }\n    savePassword = event => {\n        this.setState({password: event.target.value, passwordErrorMessage: \"\"});\n    }\n    saveNewPassword = event => {\n        this.setState({newPassword: event.target.value, passwordErrorMessage: \"\"});\n    }\n    saveNewPasswordAgain = event => {\n        this.setState({newPasswordAgain: event.target.value, passwordErrorMessage: \"\"});\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n        var response = await axios.post('http://localhost:5000http://localhost:5000/account/login', {\n            _id: this.props.location.state.email,\n            password: this.state.password\n        });\n        if(response.status !== 200){\n            this.setState({passwordErrorMessage: \"Invalid password\"});\n        }\n        else if(this.state.newPassword !== this.state.newPasswordAgain) {\n            this.setState({passwordErrorMessage: \"New passwords must match\"});\n        } \n        else if(this.state.newPassword.length < 8) {\n            this.setState({passwordErrorMessage: \"New password must have at least 8 characters\"});\n        }\n        else if(!/^(?=.*[a-z])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 lowercase character\"});\n        }\n        else if(!/^(?=.*[A-Z])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 uppercase character\"});\n        }\n        else if(!/^(?=.*[0-9])/.test(this.state.newPassword)) {\n            this.setState({passwordErrorMessage: \"New password must contain 1 numerical character\"});\n        } else {\n            await axios.post('http://localhost:5000/account/password/edit', {\n                _id: this.props.location.state.email,\n                password: this.state.password,\n                new_password: this.state.newPassword\n            }).then(success => {\n                updatePasswordNotification(this.props.location.state.email); \n                setTimeout(() => {  this.props.history.push({\n                    pathname: '/',\n                    state: {\n                        email: this.props.location.state.email\n                    }\n                }); }, 750);\n                \n                \n            }).catch(error =>{\n                this.setState({passwordErrorMessage: \"Unable to update. Please try again\"});\n            });\n        }\n    }\n    render() {\n        return(\n            <div id=\"edit-password-page\" onClick={this.props.onClick}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div id=\"password-form-holder\" className=\"col-12\">\n                            <h1>Change Password</h1>\n                            <form id=\"password-form\" onSubmit={this.handleSubmit}>\n                                <div class=\"form-group\">\n                                    <label>Current Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.password} onChange={this.savePassword}/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>New Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.newPassword} onChange={this.saveNewPassword}/>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label>Re-enter New Password:</label>\n                                    <input className=\"form-control\" type=\"password\" placeholder=\"********\" value={this.state.newPasswordAgain} onChange={this.saveNewPasswordAgain}/>\n                                    <div className=\"text-danger\">{this.state.passwordErrorMessage}</div>\n                                </div>\n                                <button className=\"btn btn-primary\" type=\"submit\">Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}