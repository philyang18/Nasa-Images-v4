{"ast":null,"code":"var _jsxFileName = \"/Users/phillipyang/Desktop/Nasa-Images-v3/client/src/EditFavorite.js\";\nimport React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\nimport Loading from \"./Loading\";\nimport { NavLink } from \"react-router-dom\";\nimport { formatDisplayDate } from \"./Formatting\";\nimport { fetchRover, fetchAPOD } from \"./NasaAPIs\";\nimport CommentBox from \"./CommentBox\";\nimport { removePhotoNotification, updateCommentNotification, deleteCommentNotification } from \"./Notifications\";\nimport PopupWarning from \"./PopupWarning\";\nimport DocumentTitle from \"react-document-title\";\nimport axios from 'axios';\nconst API = \"https://itp404-final-project-yangphil.herokuapp.com/api/favorites\";\nexport default class EditFavorite extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      this.setState({\n        loading: true\n      });\n      const acc = {\n        _id: this.props.location.state.email,\n        data: {\n          _id: this.state.id\n        }\n      };\n      let response = await axios.post(\"http://localhost:4000/account/favorites/\".concat(this.props.location.state.api, \"/fetch\"), acc);\n\n      if (response.status === 200) {\n        this.setState({\n          photo: response.data,\n          idExists: true\n        });\n\n        if (response.data.comment || !response.data.comment.trim()) {\n          this.setState({\n            comment: response.data.comment\n          });\n        } else {\n          this.setState({\n            comment: \"\"\n          });\n        }\n\n        if (this.props.location.state.api === \"apod\") {\n          const rawPhoto = await fetchAPOD(response.data.date);\n          this.setState({\n            rawPhoto\n          });\n        } else {\n          const nasaRes = await fetchRover(response.data.date);\n          nasaRes.map(photo => {\n            if (photo.id === response.data.array_id) {\n              this.setState({\n                rawPhoto: photo\n              });\n            }\n          });\n        }\n      } else {\n        this.setState({\n          idExists: false\n        });\n      }\n\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.toggleLike = async () => {\n      await axios.delete(\"http://localhost:4000/account/favorites/\".concat(this.state.photo.api, \"/delete\"), {\n        // for delete, all data must be wrapped in data\n        data: {\n          _id: this.props.location.state.email,\n          data: {\n            _id: this.state.photo._id\n          }\n        }\n      }).then(response => {// console.log(response);\n      }).catch(err => {// console.log(\"didn't delete\");\n      });\n      this.setState({\n        liked: !this.state.liked\n      });\n      removePhotoNotification(this.state.photo._id);\n      this.setState({\n        hidePopup: true\n      });\n      this.props.history.push({\n        pathname: '/favorites',\n        state: {\n          email: this.props.location.state.email\n        }\n      });\n    };\n\n    this.lastTap = null;\n\n    this.handleDoubleTap = () => {\n      const now = Date.now();\n      const DOUBLE_PRESS_DELAY = 300;\n\n      if (this.lastTap && now - this.lastTap < DOUBLE_PRESS_DELAY) {\n        this.openWarning();\n      } else {\n        this.lastTap = now;\n      }\n    };\n\n    this.handleCommentUpdate = async newComment => {\n      const id = this.state.photo._id;\n\n      if (!newComment.trim()) {\n        newComment = \"\";\n        deleteCommentNotification(id);\n      } else {\n        updateCommentNotification(id);\n      }\n\n      this.setState({\n        comment: newComment\n      });\n      axios.post(\"http://localhost:4000/account/favorites/\".concat(this.state.photo.api, \"/edit\"), {\n        _id: this.props.location.state.email,\n        data: {\n          _id: id,\n          comment: newComment\n        }\n      }); // if (this.state.photo.api === \"mars\") {\n      //   await fetch(`${API}/mars/${id}`, {\n      //     method: \"PUT\",\n      //     headers: { \"Content-Type\": \"application/json \" },\n      //     body: JSON.stringify({\n      //       comment: newComment\n      //     })\n      //   });\n      // } else {\n      //   await fetch(`${API}/apod/${id}`, {\n      //     method: \"PUT\",\n      //     headers: { \"Content-Type\": \"application/json \" },\n      //     body: JSON.stringify({\n      //       comment: newComment\n      //     })\n      //   });\n      // }\n    };\n\n    this.openWarning = () => {\n      this.setState({\n        hidePopup: false\n      });\n    };\n\n    this.handleWarning = option => {\n      if (option === \"ok\") {\n        this.toggleLike();\n      } else {\n        this.setState({\n          hidePopup: true\n        });\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      idExists: false,\n      loading: false,\n      photo: {},\n      // photo is the JSON data from my api\n      rawPhoto: {},\n      // rawPhoto is the actual JSON data from nasa api\n      liked: true,\n      comment: \"Click to add a comment\",\n      // default comment\n      deleteConfirmed: false,\n      hidePopup: true\n    };\n  }\n\n  render() {\n    return React.createElement(DocumentTitle, {\n      title: \"Edit Favorite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"singlePhotoPage\",\n      onClick: this.props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(PopupWarning, {\n      hide: this.state.hidePopup,\n      text: \"Remove from Favorites?\",\n      handlePopup: this.handleWarning,\n      email: this.props.location.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.state.loading ? React.createElement(Loading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.idExists === false ? React.createElement(ErrorPage, {\n      url: this.props.location.pathname,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: {\n        pathname: \"/favorites\",\n        state: {\n          email: this.props.location.state.email\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      id: \"back-button\",\n      href: \"\",\n      className: \"btn col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"icon-circle-arrow-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-7 col-md-7 col-sm-12 single-photo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"col-12\",\n      src: this.state.photo.url,\n      alt: this.state.photo.comment,\n      onClick: this.handleDoubleTap,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-lg-5 col-md-5 col-sm-12 single-photo-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.photo.api === \"mars\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Details\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Date Taken: \"), formatDisplayDate(this.state.rawPhoto.earth_date)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Rover: \"), this.state.rawPhoto.rover.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"Camera: \"), this.state.rawPhoto.camera.full_name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Launch Date: \"), formatDisplayDate(this.state.rawPhoto.rover.launch_date)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Landing Date: \"), formatDisplayDate(this.state.rawPhoto.rover.landing_date)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Status: \"), this.state.rawPhoto.rover.status), React.createElement(\"p\", {\n      className: \"icon-holder\",\n      onClick: this.openWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.liked ? require(\"./images/filledHeart.png\") : require(\"./images/emptyHeart.png\"),\n      className: \"heart-icon\",\n      alt: \"heart icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Comment:\")), React.createElement(\"div\", {\n      className: \"margin-top-20\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(CommentBox, {\n      value: this.state.comment,\n      onEnter: this.handleCommentUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"apod-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, formatDisplayDate(this.state.rawPhoto.date)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.rawPhoto.title)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, this.state.rawPhoto.explanation), this.state.rawPhoto.copyright ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, \"Credit: \", this.state.rawPhoto.copyright) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    })))), this.state.photo.api === \"apod\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 apod-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"icon-holder\",\n      onClick: this.openWarning,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.liked ? require(\"./images/filledHeart.png\") : require(\"./images/emptyHeart.png\"),\n      className: \"heart-icon\",\n      alt: \"heart icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Comment:\")), React.createElement(CommentBox, {\n      value: this.state.comment,\n      onEnter: this.handleCommentUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/phillipyang/Desktop/Nasa-Images-v3/client/src/EditFavorite.js"],"names":["React","ErrorPage","Loading","NavLink","formatDisplayDate","fetchRover","fetchAPOD","CommentBox","removePhotoNotification","updateCommentNotification","deleteCommentNotification","PopupWarning","DocumentTitle","axios","API","EditFavorite","Component","constructor","props","componentDidMount","setState","loading","acc","_id","location","state","email","data","id","response","post","api","status","photo","idExists","comment","trim","rawPhoto","date","nasaRes","map","array_id","toggleLike","delete","then","catch","err","liked","hidePopup","history","push","pathname","lastTap","handleDoubleTap","now","Date","DOUBLE_PRESS_DELAY","openWarning","handleCommentUpdate","newComment","handleWarning","option","match","params","deleteConfirmed","render","onClick","url","earth_date","rover","name","camera","full_name","launch_date","landing_date","require","title","explanation","copyright"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ErrorPage from \"./ErrorPage\";\nimport Loading from \"./Loading\";\nimport { NavLink } from \"react-router-dom\";\nimport { formatDisplayDate } from \"./Formatting\";\nimport { fetchRover, fetchAPOD } from \"./NasaAPIs\";\nimport CommentBox from \"./CommentBox\";\nimport {\n  removePhotoNotification,\n  updateCommentNotification,\n  deleteCommentNotification\n} from \"./Notifications\";\nimport PopupWarning from \"./PopupWarning\";\nimport DocumentTitle from \"react-document-title\";\nimport axios from 'axios';\n\nconst API = \"https://itp404-final-project-yangphil.herokuapp.com/api/favorites\";\n\nexport default class EditFavorite extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      id: this.props.match.params.id,\n      idExists: false,\n      loading: false,\n      photo: {}, // photo is the JSON data from my api\n      rawPhoto: {}, // rawPhoto is the actual JSON data from nasa api\n      liked: true,\n      comment: \"Click to add a comment\", // default comment\n      deleteConfirmed: false,\n      hidePopup: true\n    };\n  }\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    \n    const acc = {\n      _id: this.props.location.state.email,\n      data: {\n        _id: this.state.id\n      }\n    }\n    let response = await axios.post(`http://localhost:4000/account/favorites/${this.props.location.state.api}/fetch`, acc);\n    \n    if(response.status === 200) {\n      this.setState({ photo: response.data, idExists: true });\n      if (response.data.comment || !response.data.comment.trim()) {\n        this.setState({ comment: response.data.comment });\n      } else {\n        this.setState({ comment: \"\" });\n      }\n      if(this.props.location.state.api === \"apod\") {\n        const rawPhoto = await fetchAPOD(response.data.date);\n        this.setState({ rawPhoto });\n      } else {\n        const nasaRes = await fetchRover(response.data.date);\n          nasaRes.map(photo => {\n            if (photo.id === response.data.array_id) {\n              this.setState({ rawPhoto: photo });\n            } \n          });\n      } \n    } else {\n      this.setState({ idExists: false });\n    }\n    this.setState({ loading: false });\n  }\n\n  toggleLike = async () => {\n    await axios.delete(`http://localhost:4000/account/favorites/${this.state.photo.api}/delete`, {\n\t\t\t\t// for delete, all data must be wrapped in data\n        data: {\n\t\t\t\t\t_id: this.props.location.state.email,\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t_id: this.state.photo._id\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(response => {\n\t\t\t\t// console.log(response);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\t// console.log(\"didn't delete\");\n\t\t\t});\n  \n    this.setState({ liked: !this.state.liked });\n    removePhotoNotification(this.state.photo._id);\n    this.setState({ hidePopup: true });\n    this.props.history.push({\n      pathname: '/favorites',\n      state: {\n        email: this.props.location.state.email\n      }\n    });\n  }\n\n  lastTap = null;\n  handleDoubleTap = () => {\n    const now = Date.now();\n    const DOUBLE_PRESS_DELAY = 300;\n    if (this.lastTap && now - this.lastTap < DOUBLE_PRESS_DELAY) {\n      this.openWarning();\n    } else {\n      this.lastTap = now;\n    }\n  };\n  handleCommentUpdate = async newComment => {\n    const id = this.state.photo._id;\n    if (!newComment.trim()) {\n      newComment = \"\";\n      deleteCommentNotification(id);\n    } else {\n      updateCommentNotification(id);\n    }\n    this.setState({ comment: newComment });\n    axios.post(`http://localhost:4000/account/favorites/${this.state.photo.api}/edit`, {\n      _id: this.props.location.state.email,\n      data: {\n        _id: id,\n        comment: newComment\n      }\n    });\n    // if (this.state.photo.api === \"mars\") {\n    //   await fetch(`${API}/mars/${id}`, {\n    //     method: \"PUT\",\n    //     headers: { \"Content-Type\": \"application/json \" },\n    //     body: JSON.stringify({\n    //       comment: newComment\n    //     })\n    //   });\n    // } else {\n    //   await fetch(`${API}/apod/${id}`, {\n    //     method: \"PUT\",\n    //     headers: { \"Content-Type\": \"application/json \" },\n    //     body: JSON.stringify({\n    //       comment: newComment\n    //     })\n    //   });\n    // }\n  };\n  openWarning = () => {\n    this.setState({ hidePopup: false });\n  };\n  handleWarning = option => {\n    if (option === \"ok\") {\n      this.toggleLike();\n    } else {\n      this.setState({ hidePopup: true });\n    }\n  };\n  render() {\n    return (\n      <DocumentTitle title=\"Edit Favorite\">\n        <div id=\"singlePhotoPage\" onClick={this.props.onClick}>\n          <PopupWarning\n            hide={this.state.hidePopup}\n            text=\"Remove from Favorites?\"\n            handlePopup={this.handleWarning}\n            email={this.props.location.state.email}\n          />\n          {this.state.loading ? (\n            <Loading />\n          ) : (\n            <div>\n              {this.state.idExists === false ? (\n                <ErrorPage url={this.props.location.pathname} />\n              ) : (\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <NavLink to={{\n                      pathname: \"/favorites\",\n                      state: {\n                        email: this.props.location.state.email\n                      }\n                    }}>\n                      <a id=\"back-button\" href=\"\" className=\"btn col-12\"><i className=\"icon-circle-arrow-left\"></i></a>\n                    </NavLink>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col-lg-7 col-md-7 col-sm-12 single-photo\">\n                      <img\n                        className=\"col-12\"\n                        src={this.state.photo.url}\n                        alt={this.state.photo.comment}\n                        onClick={this.handleDoubleTap}\n                      />\n                    </div>\n                    <div className=\"col-lg-5 col-md-5 col-sm-12 single-photo-details\">\n                      {this.state.photo.api === \"mars\" ? (\n                        <div>\n                          <h2>Details</h2>\n                          <p>\n                            <strong>Date Taken: </strong>\n                            {formatDisplayDate(this.state.rawPhoto.earth_date)}\n                          </p>\n                          <p>\n                            <strong>Rover: </strong>\n                            {this.state.rawPhoto.rover.name}\n                          </p>\n                          <p>\n                            <strong>Camera: </strong>\n                            {this.state.rawPhoto.camera.full_name}\n                          </p>\n                          <p>\n                            <strong>Launch Date: </strong>\n                            {formatDisplayDate(\n                              this.state.rawPhoto.rover.launch_date\n                            )}\n                          </p>\n                          <p>\n                            <strong>Landing Date: </strong>\n                            {formatDisplayDate(\n                              this.state.rawPhoto.rover.landing_date\n                            )}\n                          </p>\n                          <p>\n                            <strong>Status: </strong>\n                            {this.state.rawPhoto.rover.status}\n                          </p>\n                          {/* <div className=\"icon-holder\" onClick={this.toggleLike}>\n                                                    <img\n                                                        src={this.state.liked ? require('./images/filledHeart.png') : require('./images/emptyHeart.png')}\n                                                        className=\"heart-icon\"\n                                                        alt=\"heart icon\"\n                                                    />\n                                                </div> */}\n                          <p className=\"icon-holder\" onClick={this.openWarning}>\n                            <img\n                              src={\n                                this.state.liked\n                                  ? require(\"./images/filledHeart.png\")\n                                  : require(\"./images/emptyHeart.png\")\n                              }\n                              className=\"heart-icon\"\n                              alt=\"heart icon\"\n                            />\n                          </p>\n                          <p>\n                            <strong>Comment:</strong>\n                          </p>\n                          <div className=\"margin-top-20\">\n                            <CommentBox\n                              value={this.state.comment}\n                              onEnter={this.handleCommentUpdate}\n                            />\n                          </div>\n                        </div>\n                      ) : (\n                        <div>\n                          <p id=\"apod-date\">\n                            {formatDisplayDate(this.state.rawPhoto.date)}\n                          </p>\n                          <p>\n                            <strong>{this.state.rawPhoto.title}</strong>\n                          </p>\n                          <p>{this.state.rawPhoto.explanation}</p>\n                          {this.state.rawPhoto.copyright ? (\n                            <p>Credit: {this.state.rawPhoto.copyright}</p>\n                          ) : (\n                            <p></p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  {this.state.photo.api === \"apod\" ? (\n                    <div>\n                      <div className=\"col-12 apod-details\">\n                        <p className=\"icon-holder\" onClick={this.openWarning}>\n                          <img\n                            src={\n                              this.state.liked\n                                ? require(\"./images/filledHeart.png\")\n                                : require(\"./images/emptyHeart.png\")\n                            }\n                            className=\"heart-icon\"\n                            alt=\"heart icon\"\n                          />\n                        </p>\n                        <p>\n                          <strong>Comment:</strong>\n                        </p>\n                        <CommentBox\n                          value={this.state.comment}\n                          onEnter={this.handleCommentUpdate}\n                        />\n                      </div>\n                    </div>\n                  ) : (\n                    <div />\n                  )}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </DocumentTitle>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}